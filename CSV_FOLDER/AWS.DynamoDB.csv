metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name
aws.DynamoDB.account_max_reads,count,,,,The maximum number of read capacity units that can be used by an account. This limit does not apply to on-demand tables or global secondary indexes.,,DynamoDB,
aws.DynamoDB.account_max_table_level_reads,count,,,,The maximum number of read capacity units that can be used by a table or global secondary index of an account. For on-demand tables this limit caps the maximum read request units a table or a global secondary index can use.,,DynamoDB,
aws.DynamoDB.account_max_table_level_writes,count,,,,The maximum number of write capacity units that can be used by a table or global secondary index of an account. For on-demand tables this limit caps the maximum write request units a table or a global secondary index can use.,,DynamoDB,
aws.DynamoDB.account_max_writes,count,,,,The maximum number of write capacity units that can be used by an account. This limit does not apply to on-demand tables or global secondary indexes.,,DynamoDB,
aws.DynamoDB.account_provisioned_read_capacity_utilization,gauge,,,,The percentage of provisioned read capacity units utilized by an account.,,DynamoDB,
aws.DynamoDB.account_provisioned_write_capacity_utilization,gauge,,,,The percentage of provisioned write capacity units utilized by an account.,,DynamoDB,
aws.DynamoDB.age_of_oldest_unreplicated_record,gauge,,,,The elapsed time since a record yet to be replicated to the Kinesis data stream first appeared in the DynamoDB table.,,DynamoDB,
aws.DynamoDB.conditional_check_failed_requests,count,,,,"The number of failed attempts to perform conditional writes. The PutItem, UpdateItem, and DeleteItem operations let you provide a logical condition that must evaluate to true before the operation can proceed. If this condition evaluates to false, ConditionalCheckFailedRequests is incremented by one. ConditionalCheckFailedRequests is also incremented by one for PartiQL Update and Delete statements where a logical condition is provided and that condition evaluates to false.",,DynamoDB,
aws.DynamoDB.consumed_change_data_capture_units,count,,,,The number of consumed change data capture units.,,DynamoDB,
aws.DynamoDB.consumed_read_capacity_units,count,,,,"The number of read capacity units consumed over the specified time period, so you can track how much of your provisioned throughput is used. You can retrieve the total consumed read capacity for a table and all of its global secondary indexes, or for a particular global secondary index. For more information, see Read/Write Capacity Mode.",,DynamoDB,
aws.DynamoDB.consumed_write_capacity_units,count,,,,"The number of write capacity units consumed over the specified time period, so you can track how much of your provisioned throughput is used. You can retrieve the total consumed write capacity for a table and all of its global secondary indexes, or for a particular global secondary index. For more information, see Read/Write Capacity Mode.",,DynamoDB,
aws.DynamoDB.max_provisioned_table_read_capacity_utilization,gauge,,,,The percentage of provisioned read capacity units utilized by the highest provisioned read table or global secondary index of an account.,,DynamoDB,
aws.DynamoDB.max_provisioned_table_write_capacity_utilization,gauge,,,,The percentage of provisioned write capacity utilized by the highest provisioned write table or global secondary index of an account.,,DynamoDB,
aws.DynamoDB.online_index_consumed_write_capacity,count,,,,"The number of write capacity units consumed when adding a new global secondary index to a table. If the write capacity of the index is too low, incoming write activity during the backfill phase might be throttled. This can increase the time it takes to create the index. You should monitor this statistic while the index is being built to determine whether the write capacity of the index is underprovisioned.",,DynamoDB,
aws.DynamoDB.online_index_percentage_progress,count,,,,"The percentage of completion when a new global secondary index is being added to a table. DynamoDB must first allocate resources for the new index, and then backfill attributes from the table into the index. For large tables, this process might take a long time. You should monitor this statistic to view the relative progress as DynamoDB builds the index.",,DynamoDB,
aws.DynamoDB.online_index_throttle_events,count,,,,"The number of write throttle events that occur when adding a new global secondary index to a table. These events indicate that the index creation will take longer to complete, because incoming write activity is exceeding the provisioned write throughput of the index.",,DynamoDB,
aws.DynamoDB.pending_replication_count,count,,,,"(This metric is for DynamoDB global tables.) The number of item updates that are written to one replica table, but that have not yet been written to another replica in the global table.",,DynamoDB,
aws.DynamoDB.provisioned_read_capacity_units,count,,,,The number of provisioned read capacity units for a table or a global secondary index.,,DynamoDB,
aws.DynamoDB.provisioned_write_capacity_units,count,,,,The number of provisioned write capacity units for a table or a global secondary index.,,DynamoDB,
aws.DynamoDB.read_throttle_events,count,,,,Requests to DynamoDB that exceed the provisioned read capacity units for a table or a global secondary index.,,DynamoDB,
aws.DynamoDB.replication_latency,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.minimum,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.maximum,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.p50,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.p90,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.p95,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.p99,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.replication_latency.p99.99,gauge,,,,"(This metric is for DynamoDB global tables.) The elapsed time between an updated item appearing in the DynamoDB stream for one replica table, and that item appearing in another replica in the global table.",,DynamoDB,
aws.DynamoDB.returned_bytes,gauge,,,,The number of bytes returned by GetRecords operations (Amazon DynamoDB Streams) during the specified time period.,,DynamoDB,
aws.DynamoDB.returned_item_count,count,,,,"The number of items returned by Query, Scan or ExecuteStatement (select) operations during the specified time period.",,DynamoDB,
aws.DynamoDB.returned_records_count,count,,,,The number of stream records returned by GetRecords operations (Amazon DynamoDB Streams) during the specified time period.,,DynamoDB,
aws.DynamoDB.successful_request_latency,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.minimum,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.maximum,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.p50,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.p90,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.p95,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.p99,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.successful_request_latency.p99.99,gauge,,,,The successful requests to DynamoDB or Amazon DynamoDB Streams during the specified time period. SuccessfulRequestLatency can provide two different kinds of information:,,DynamoDB,
aws.DynamoDB.system_errors,count,,,,The requests to DynamoDB or Amazon DynamoDB Streams that generate an HTTP 500 status code during the specified time period. An HTTP 500 usually indicates an internal service error.,,DynamoDB,
aws.DynamoDB.time_to_live_deleted_item_count,count,,,,The number of items deleted by Time to Live (TTL) during the specified time period. This metric helps you monitor the rate of TTL deletions on your table.,,DynamoDB,
aws.DynamoDB.throttled_put_record_count,count,,,,The number of records that failed to replicate to the Kinesis data stream due to insufficient Kinesis Data Stream capacity.,,DynamoDB,
aws.DynamoDB.throttled_requests,count,,,,Requests to DynamoDB that exceed the provisioned throughput limits on a resource (such as a table or an index).,,DynamoDB,
aws.DynamoDB.transaction_conflict,count,,,,"Rejected item-level requests due to transactional conflicts between concurrent requests on the same items. For more information, see Transaction Conflict Handling in DynamoDB.",,DynamoDB,
aws.DynamoDB.user_errors,count,,,,"Requests to DynamoDB or Amazon DynamoDB Streams that generate an HTTP 400 status code during the specified time period. An HTTP 400 usually indicates a client-side error, such as an invalid combination of parameters, an attempt to update a nonexistent table, or an incorrect request signature.",,DynamoDB,
aws.DynamoDB.write_throttle_events,count,,,,Requests to DynamoDB that exceed the provisioned write capacity units for a table or a global secondary index.,,DynamoDB,
