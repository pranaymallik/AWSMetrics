metric_name,metric Stats
aws.elb.backend_connection_errors,,,,,"The number of connections that were not successfully established between the load balancer and the registered instances. Because the load balancer retries the connection when there are errors, this count can exceed the request rate. Note that this count also includes any connection errors related to health checks.",,elb,
aws.elb.backend_connection_errors_min,,,,,"The number of connections that were not successfully established between the load balancer and the registered instances. Because the load balancer retries the connection when there are errors, this count can exceed the request rate. Note that this count also includes any connection errors related to health checks._min",,elb,
aws.elb.backend_connection_errors_max,,,,,"The number of connections that were not successfully established between the load balancer and the registered instances. Because the load balancer retries the connection when there are errors, this count can exceed the request rate. Note that this count also includes any connection errors related to health checks._max",,elb,
aws.elb.backend_connection_errors_avg,,,,,"The number of connections that were not successfully established between the load balancer and the registered instances. Because the load balancer retries the connection when there are errors, this count can exceed the request rate. Note that this count also includes any connection errors related to health checks._avg",,elb,
aws.elb.desync_mitigation_mode_non_compliant_request_count,,,,,[HTTP listener] The number of requests that do not comply with RFC 7230.,,elb,
aws.elb.desync_mitigation_mode_non_compliant_request_count_min,,,,,[HTTP listener] The number of requests that do not comply with RFC 7230._min,,elb,
aws.elb.desync_mitigation_mode_non_compliant_request_count_max,,,,,[HTTP listener] The number of requests that do not comply with RFC 7230._max,,elb,
aws.elb.desync_mitigation_mode_non_compliant_request_count_avg,,,,,[HTTP listener] The number of requests that do not comply with RFC 7230._avg,,elb,
aws.elb.healthy_host_count,,,,,"The number of healthy instances registered with your load balancer. A newly registered instance is considered healthy after it passes the first health check. If cross-zone load balancing is enabled, the number of healthy instances for the LoadBalancerName dimension is calculated across all Availability Zones. Otherwise, it is calculated per Availability Zone.",,elb,
aws.elb.healthy_host_count_min,,,,,"The number of healthy instances registered with your load balancer. A newly registered instance is considered healthy after it passes the first health check. If cross-zone load balancing is enabled, the number of healthy instances for the LoadBalancerName dimension is calculated across all Availability Zones. Otherwise, it is calculated per Availability Zone._min",,elb,
aws.elb.healthy_host_count_max,,,,,"The number of healthy instances registered with your load balancer. A newly registered instance is considered healthy after it passes the first health check. If cross-zone load balancing is enabled, the number of healthy instances for the LoadBalancerName dimension is calculated across all Availability Zones. Otherwise, it is calculated per Availability Zone._max",,elb,
aws.elb.healthy_host_count_avg,,,,,"The number of healthy instances registered with your load balancer. A newly registered instance is considered healthy after it passes the first health check. If cross-zone load balancing is enabled, the number of healthy instances for the LoadBalancerName dimension is calculated across all Availability Zones. Otherwise, it is calculated per Availability Zone._avg",,elb,
aws.elb.httpcode_backend_3xx,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b.",,elb,
aws.elb.httpcode_backend_3xx_min,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._min",,elb,
aws.elb.httpcode_backend_3xx_max,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._max",,elb,
aws.elb.httpcode_backend_3xx_avg,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._avg",,elb,
aws.elb.httpcode_backend_4xx,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b.",,elb,
aws.elb.httpcode_backend_4xx_min,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._min",,elb,
aws.elb.httpcode_backend_4xx_max,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._max",,elb,
aws.elb.httpcode_backend_4xx_avg,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._avg",,elb,
aws.elb.httpcode_backend_5xx,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b.",,elb,
aws.elb.httpcode_backend_5xx_min,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._min",,elb,
aws.elb.httpcode_backend_5xx_max,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._max",,elb,
aws.elb.httpcode_backend_5xx_avg,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._avg",,elb,
aws.elb.httpcode_backend_5xx,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b.",,elb,
aws.elb.httpcode_backend_5xx_min,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._min",,elb,
aws.elb.httpcode_backend_5xx_max,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._max",,elb,
aws.elb.httpcode_backend_5xx_avg,,,,,"Example : Suppose that your load balancer has 2 instances in us-west-2a and 2 instances in us-west-2b, us-west-2a has 1 unhealthy instance, and us-west-2b has no unhealthy instances. With the AvailabilityZone dimension, there is an average of 1 healthy and 1 unhealthy instance in us-west-2a, and an average of 2 healthy and 0 unhealthy instances in us-west-2b._avg",,elb,
aws.elb.http_code_elb_4xx,,,,,[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer. Client errors are generated when a request is malformed or incomplete.,,elb,
aws.elb.http_code_elb_4xx_min,,,,,[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer. Client errors are generated when a request is malformed or incomplete._min,,elb,
aws.elb.http_code_elb_4xx_max,,,,,[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer. Client errors are generated when a request is malformed or incomplete._max,,elb,
aws.elb.http_code_elb_4xx_avg,,,,,[HTTP listener] The number of HTTP 4XX client error codes generated by the load balancer. Client errors are generated when a request is malformed or incomplete._avg,,elb,
aws.elb.http_code_elb_5xx,,,,,"[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer. This count does not include any response codes generated by the registered instances. The metric is reported if there are no healthy instances registered to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer.",,elb,
aws.elb.http_code_elb_5xx_min,,,,,"[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer. This count does not include any response codes generated by the registered instances. The metric is reported if there are no healthy instances registered to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer._min",,elb,
aws.elb.http_code_elb_5xx_max,,,,,"[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer. This count does not include any response codes generated by the registered instances. The metric is reported if there are no healthy instances registered to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer._max",,elb,
aws.elb.http_code_elb_5xx_avg,,,,,"[HTTP listener] The number of HTTP 5XX server error codes generated by the load balancer. This count does not include any response codes generated by the registered instances. The metric is reported if there are no healthy instances registered to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer._avg",,elb,
aws.elb.latency,,,,,"[HTTP listener] The total time elapsed, in seconds, from the time the load balancer sent the request to a registered instance until the instance started to send the response headers.",,elb,
aws.elb.latency_min,,,,,"[HTTP listener] The total time elapsed, in seconds, from the time the load balancer sent the request to a registered instance until the instance started to send the response headers._min",,elb,
aws.elb.latency_max,,,,,"[HTTP listener] The total time elapsed, in seconds, from the time the load balancer sent the request to a registered instance until the instance started to send the response headers._max",,elb,
aws.elb.latency_avg,,,,,"[HTTP listener] The total time elapsed, in seconds, from the time the load balancer sent the request to a registered instance until the instance started to send the response headers._avg",,elb,
aws.elb.request_count,,,,,The number of requests completed or connections made during the specified interval (1 or 5 minutes).,,elb,
aws.elb.request_count_min,,,,,The number of requests completed or connections made during the specified interval (1 or 5 minutes)._min,,elb,
aws.elb.request_count_max,,,,,The number of requests completed or connections made during the specified interval (1 or 5 minutes)._max,,elb,
aws.elb.request_count_avg,,,,,The number of requests completed or connections made during the specified interval (1 or 5 minutes)._avg,,elb,
aws.elb.spillover_count,,,,,The total number of requests that were rejected because the surge queue is full.,,elb,
aws.elb.spillover_count_min,,,,,The total number of requests that were rejected because the surge queue is full._min,,elb,
aws.elb.spillover_count_max,,,,,The total number of requests that were rejected because the surge queue is full._max,,elb,
aws.elb.spillover_count_avg,,,,,The total number of requests that were rejected because the surge queue is full._avg,,elb,
aws.elb.surge_queue_length,,,,,"The total number of requests (HTTP listener) or connections (TCP listener) that are pending routing to a healthy instance. The maximum size of the queue is 1,024. Additional requests or connections are rejected when the queue is full. For more information, see SpilloverCount .",,elb,
aws.elb.surge_queue_length_min,,,,,"The total number of requests (HTTP listener) or connections (TCP listener) that are pending routing to a healthy instance. The maximum size of the queue is 1,024. Additional requests or connections are rejected when the queue is full. For more information, see SpilloverCount ._min",,elb,
aws.elb.surge_queue_length_max,,,,,"The total number of requests (HTTP listener) or connections (TCP listener) that are pending routing to a healthy instance. The maximum size of the queue is 1,024. Additional requests or connections are rejected when the queue is full. For more information, see SpilloverCount ._max",,elb,
aws.elb.surge_queue_length_avg,,,,,"The total number of requests (HTTP listener) or connections (TCP listener) that are pending routing to a healthy instance. The maximum size of the queue is 1,024. Additional requests or connections are rejected when the queue is full. For more information, see SpilloverCount ._avg",,elb,
aws.elb.un_healthy_host_count,,,,,The number of unhealthy instances registered with your load balancer. An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks. An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks.,,elb,
aws.elb.un_healthy_host_count_min,,,,,The number of unhealthy instances registered with your load balancer. An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks. An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks._min,,elb,
aws.elb.un_healthy_host_count_max,,,,,The number of unhealthy instances registered with your load balancer. An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks. An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks._max,,elb,
aws.elb.un_healthy_host_count_avg,,,,,The number of unhealthy instances registered with your load balancer. An instance is considered unhealthy after it exceeds the unhealthy threshold configured for health checks. An unhealthy instance is considered healthy again after it meets the healthy threshold configured for health checks._avg,,elb,
aws.elb.estimated_alb_active_connection_count,,,,,"The estimated number of concurrent TCP connections active from clients to the load
                                                   balancer and from the load balancer to targets.",,elb,
aws.elb.estimated_alb_consumed_lcus,,,,,"The estimated number of load balancer capacity units (LCU) used by an Application
                                                   Load Balancer. You pay for the number of LCUs that you use per hour. 
                                                   									For more information, see Elastic Load Balancing Pricing.",,elb,
aws.elb.estimated_alb_new_connection_count,,,,,"The estimated number of new TCP connections established from clients to the load balancer
                                                   and from the load balancer to targets.",,elb,
aws.elb.estimated_processed_bytes,,,,,The estimated number of bytes processed by an Application Load Balancer.,,elb,
